#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Servo.h>

const char* ssid = "OnePlus Nord 3 5G";
const char* password = "Sumit2005";
const char* mqtt_server = "5.196.78.28";  // Your broker's IP

WiFiClient espClient;
PubSubClient client(espClient);
Servo myservo;
const int servoPin = D4;

void setup_wifi() {
  delay(10);
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected, IP: " + WiFi.localIP().toString());
}

void callback(char* topic, byte* payload, unsigned int length) {
  String msg = "";
  for (int i = 0; i < length; i++) {
    msg += (char)payload[i];
  }

  Serial.println("MQTT message: " + msg);
  int angle = msg.toInt();
  if (angle >= 0 && angle <= 180) {
    myservo.write(angle);
    Serial.println("Moved to angle: " + String(angle));
  } else {
    Serial.println("Invalid angle.");
  }
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Connecting to MQTT...");
    if (client.connect("NodeMCUServoClient")) {
      Serial.println(" connected!");
      client.subscribe("servo/angle");
    } else {
      Serial.print(" failed, rc=");
      Serial.print(client.state());
      delay(2000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  myservo.attach(servoPin, 500, 2500);  // Calibrated pulse
  setup_wifi();
  client.setServer(mqtt_server, 1883);  // Use local broker IP
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}
