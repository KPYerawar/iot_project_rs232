#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <SoftwareSerial.h>

// Replace these with your Wi-Fi credentials
const char* ssid = "Omkar";
const char* password = "HighHigh";

// Replace with your MQTT broker IP and port
const char* mqtt_server = "5.196.78.28"; // e.g. "192.168.1.100"
const int mqtt_port = 1883;

WiFiClient espClient;
PubSubClient client(espClient);

// RS232 over SoftwareSerial
SoftwareSerial rs232Serial(D7, D8); // RX, TX
String message = "";

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.print("WiFi connected. IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    if (client.connect("NodeMCU_RS232_Client")) {
      Serial.println("connected");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" retrying in 5 seconds...");
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(9600);
  rs232Serial.begin(9600);
  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  Serial.println("Ready to receive RS232 and publish to MQTT.");
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  if (rs232Serial.available()) {
    char c = rs232Serial.read();

    if (c == '\n' || c == '\r') {
      if (message.length() > 0) {
        Serial.print("Received from RS232: ");
        Serial.println(message);

        // Publish to MQTT topic
        client.publish("cnc/serial", message.c_str());

        message = ""; // Clear for next
      }
    } else {
      message += c;
    }
  }

  // Optional: Serial Monitor to RS232
  if (Serial.available()) {
    rs232Serial.write(Serial.read());
  }
}
